version: "3.9"

services:
  angular:
    build:
      context: ./Angular
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    networks:
      - app-network

  dotnet:
    build:
      context: ./DotNet
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      # Overwrite the "ConnectionStrings:UserDB" from your appsettings.json
      ConnectionStrings__UserDB: "Host=hopper.proxy.rlwy.net;Port=49584;Database=railway;Username=postgres;Password=wWbcCDJgPbNsEeLHBVqnWDjsUsJyJRaD;SSL Mode=Disable"
    networks:
      - app-network

  springboot:
    build:
      context: ./SpringBoot
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: "jdbc:h2:tcp://h2:1521//opt/h2-data/ComeAndGet"
      SPRING_DATASOURCE_USERNAME: "sa"
      SPRING_DATASOURCE_PASSWORD: "password"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "create-drop"
    depends_on:
      - h2
    networks:
      - app-network

  h2:
    image: oscarfonts/h2:alpine
    hostname: h2
    environment:
      # Pass all flags here so /h2/h2.sh uses them
      H2_OPTIONS: "-tcp -tcpPort 1521 -web -webPort 8082 -webAllowOthers -ifNotExists"
    ports:
      - "1521:1521"
      - "8082:8082"
    volumes:
      - h2-data:/opt/h2-data
    networks:
      - app-network

networks:
  app-network:

volumes:
  h2-data:
